{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kazug\\\\CMPE195A\\\\Connecteam\\\\employee_management\\\\src\\\\main\\\\ui\\\\src\\\\Screens\\\\SignInScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./SignInScreen.css\";\nimport logo from \"./images/left.png\";\nimport logos from \"./images/right.png\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SigninScreen(props) {\n  _s();\n\n  // const navigate = useNavigate();\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [LoginStatus, setLoginStatus] = useState(\"\"); // useEffect(() => {\n  //   return () => {};\n  // }, []);\n  //function to retrieve data from backend\n\n  const Login = () => {\n    // const history = useHistory();\n    Axios.post(\"http://localhost:3001/user/login\", {\n      ID: id,\n      password: password\n    }).then(response => {\n      // console.log(response.data);\n      if (response.data.loggedIn) {\n        localStorage.setItem(\"loggedIn\", true);\n        localStorage.setItem(\"ID\", response.data.ID);\n        props.history.push(\"/main\"); // setLoginStatus(response.data.message);\n      } else {\n        setLoginStatus(response.data.message);\n      } // console.log(response);\n\n    });\n  };\n\n  const SignInHandler = event => {\n    event.preventDefault(); //to prevent the page gets reloaded when we click on the submit button, so that it does not send any data to the server\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Connecteam+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"left\",\n      src: logo,\n      alt: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"right\",\n      src: logos,\n      alt: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: SignInHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SignInForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Employee ID\",\n          id: \"employee_id\",\n          onChange: event => setId(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          id: \"password\",\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Login,\n          type: \"submit\",\n          className: \"registerbtn\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: \"red\"\n          },\n          children: LoginStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SigninScreen, \"9OpmYa1ZJCYjD1XwhSkWhl4qP+k=\");\n\n_c = SigninScreen;\nexport default SigninScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninScreen\");","map":{"version":3,"sources":["C:/Users/kazug/CMPE195A/Connecteam/employee_management/src/main/ui/src/Screens/SignInScreen.js"],"names":["useEffect","useState","useHistory","logo","logos","Axios","SigninScreen","props","id","setId","password","setPassword","LoginStatus","setLoginStatus","Login","post","ID","then","response","data","loggedIn","localStorage","setItem","history","push","message","SignInHandler","event","preventDefault","target","value","color"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./SignInScreen.css\";\r\nimport logo from \"./images/left.png\";\r\nimport logos from \"./images/right.png\";\r\nimport Axios from \"axios\";\r\n\r\nfunction SigninScreen(props) {\r\n  // const navigate = useNavigate();\r\n  const [id, setId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [LoginStatus, setLoginStatus] = useState(\"\");\r\n\r\n  // useEffect(() => {\r\n  //   return () => {};\r\n  // }, []);\r\n\r\n  //function to retrieve data from backend\r\n  const Login = () => {\r\n    // const history = useHistory();\r\n    Axios.post(\"http://localhost:3001/user/login\", {\r\n      ID: id,\r\n      password: password,\r\n    }).then((response) => {\r\n      // console.log(response.data);\r\n      if (response.data.loggedIn) {\r\n        localStorage.setItem(\"loggedIn\", true);\r\n        localStorage.setItem(\"ID\", response.data.ID);\r\n        props.history.push(\"/main\");\r\n        // setLoginStatus(response.data.message);\r\n      } else {\r\n        setLoginStatus(response.data.message);\r\n      }\r\n      // console.log(response);\r\n    });\r\n  };\r\n\r\n  const SignInHandler = (event) => {\r\n    event.preventDefault(); //to prevent the page gets reloaded when we click on the submit button, so that it does not send any data to the server\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Connecteam+</h1>\r\n      <img className=\"left\" src={logo} alt=\"Logo\" />\r\n      <img className=\"right\" src={logos} alt=\"Logo\" />\r\n      <form onSubmit={SignInHandler}>\r\n        <div className=\"SignInForm\">\r\n          <h1>Sign In</h1>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Employee ID\"\r\n            id=\"employee_id\"\r\n            onChange={(event) => setId(event.target.value)}\r\n          ></input>\r\n          <hr></hr>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            id=\"password\"\r\n            onChange={(event) => setPassword(event.target.value)}\r\n          ></input>\r\n          <hr></hr>\r\n          <button onClick={Login} type=\"submit\" className=\"registerbtn\">\r\n            Log In\r\n          </button>\r\n          <h4 style={{ color: \"red\" }}>{LoginStatus}</h4>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default SigninScreen;\r\n"]},"metadata":{},"sourceType":"module"}