{"ast":null,"code":"var _jsxFileName = \"/Users/shunali/Desktop/employee_management/src/main/ui/src/Screens/RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./RegisterScreen.css\";\nimport logo from \"./images/left.png\";\nimport logos from \"./images/right.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = () => {\n  _s();\n\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rePassword, setRePassword] = useState(\"\");\n\n  const RegisterHandler = event => {\n    event.preventDefault(); //to prevent the page gets reloaded when we click on the submit button, so that it does not send any data to the server\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Connecteam+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"left\",\n      src: logo,\n      alt: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"right\",\n      src: logos,\n      alt: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: RegisterHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RegisterForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Employee ID\",\n          id: \"employee_id\",\n          onChange: event => setId(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          id: \"name\",\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Email Address\",\n          id: \"email\",\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Password\",\n          id: \"password\",\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Confirm Password\",\n          id: \"employee_id\",\n          onChange: event => setRePassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          class: \"registerbtn\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterScreen, \"ywnRqxAoV0mPPccddcGgdtFRr1k=\");\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["/Users/shunali/Desktop/employee_management/src/main/ui/src/Screens/RegisterScreen.js"],"names":["React","useState","logo","logos","RegisterScreen","id","setId","name","setName","email","setEmail","password","setPassword","rePassword","setRePassword","RegisterHandler","event","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./RegisterScreen.css\";\nimport logo from \"./images/left.png\";\nimport logos from \"./images/right.png\";\n\nconst RegisterScreen = () => {\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rePassword, setRePassword] = useState(\"\");\n\n  const RegisterHandler = (event) => {\n    event.preventDefault(); //to prevent the page gets reloaded when we click on the submit button, so that it does not send any data to the server\n  };\n  return (\n    <div>\n      <h1>Connecteam+</h1>\n      <img className=\"left\" src={logo} alt=\"Logo\" />\n      <img className=\"right\" src={logos} alt=\"Logo\" />\n      <form onSubmit={RegisterHandler}>\n        <div className=\"RegisterForm\">\n          <h1>Register</h1>\n          <input\n            type=\"text\"\n            placeholder=\"Employee ID\"\n            id=\"employee_id\"\n            onChange={(event) => setId(event.target.value)}\n          ></input>\n          <hr></hr>\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            id=\"name\"\n            onChange={(event) => setName(event.target.value)}\n          ></input>\n          <hr></hr>\n          <input\n            type=\"text\"\n            placeholder=\"Email Address\"\n            id=\"email\"\n            onChange={(event) => setEmail(event.target.value)}\n          ></input>\n          <hr></hr>\n          <input\n            type=\"text\"\n            placeholder=\"Password\"\n            id=\"password\"\n            onChange={(event) => setPassword(event.target.value)}\n          ></input>\n          <hr></hr>\n          <input\n            type=\"text\"\n            placeholder=\"Confirm Password\"\n            id=\"employee_id\"\n            onChange={(event) => setRePassword(event.target.value)}\n          ></input>\n          <hr></hr>\n          <button type=\"submit\" class=\"registerbtn\">\n            Register\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}